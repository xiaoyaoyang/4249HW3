{
    "contents" : "require(stringr)\n\n#5\nnchar(\"abcdef\")\nstr_length(\"abcdef\")\nnchar(NA)\nstr_length(NA)\n\n#6\nstring <- \"23 mai 2000\"\nstring2 <- \"1 mai 2000\"\n#what is this!???\nregexp <- \"([[:digit:]]{2}) ([[:alpha:]]+) ([[:digit:]]{4})\"\ngrepl(pattern = regexp, x = string)\nstr_detect(string, regexp)\ngrepl(pattern = regexp, x = string2)\n\n#7\nstring <- \"blabla 23 mai 2000 blabla 18 mai 2004\"\ntextcnt(string,n=1L,method=\"string\")\n\n#8\ncpos(\"abcdefghijklmnopqrstuvwxyz\",\"p\",start=1)\nsubstring.location(\"abcdefghijklmnopqrstuvwxyz\",\"def\")\n\n\n\n\n#9\nregexp <- \"([[:digit:]]{2}) ([[:alpha:]]+) ([[:digit:]]{4})\"\nstring <- \"blabla 23 mai 2000 blabla 18 mai 2004\"\n\nregexpr(pattern = regexp, text = string)\ngregexpr(pattern = regexp, text = string)\nstr_locate(string,regexp)\nstr_locate_all(string,regexp)\n\n#10\nsubstr(\"simple text\",1,3)\nstr_sub(\"simple text\",1,3)\nfirst.word(\"abc def ghk\")\n\n# 11.\n\ngrep(pattern = regexp, x = string , value = T) \ngrep(pattern = regexp, x = string2 , value = T) \ngrep(pattern = regexp, x = string , value = F) \ngrep(pattern = regexp, x = string2 , value = F) \n\n\n\n\n\n\n\n\nlibrary(\"stringr\")\nregexp <- \"([[:digit:]]{2}) ([[:alpha:]]+) ([[:digit:]]{4})\"\nstring <- \"blabla 23 mai 2000 blabla 18 mai 2004\"\nstr_extract(string,regexp)\nstr_extract_all(string,regexp)\nstr_match(string,regexp)\nstr_match_all(string,regexp)\n\n# 12.\n\nstring <- \"23 mai 2000\"\nregexp <- \"([[:digit:]]{2}) ([[:alpha:]]+) ([[:digit:]]{4})\"\nsub(pattern = regexp, replacement = \"\\\\1\", x = string) # returns the first part of the regular expression\nsub(pattern = regexp, replacement = \"\\\\2\", x = string) # returns the second part\nsub(pattern = regexp, replacement = \"\\\\3\", x = string) # returns the third part\n\n# 13.\n\ntolower(\"ABCdef\")\ntoupper(\"ABCdef\")\ncapitalize(\"abcdef\")\n\n#14.\n\nlibrary(\"cwhmisc\")\npadding(\"abc\",10,\" \",\"both\") # adds blanks such that the length of the string is 10.\nstr_pad(\"abc\",width=10,side=\"center\", pad = \"+\")\nstr_pad(c(\"1\",\"11\",\"111\",\"1111\"),3,side=\"left\",pad=\"0\") \n\nlibrary(\"memisc\")\ntrimws(\"  abc def   \")\nlibrary(\"gdata\")\ntrim(\" abc def \")\nstr_trim(\"  abd def  \")\n\n#15\n\n\"abc\"==\"abc\"\n\"abc\"==\"abd\"\n\nagrep(pattern = \"laysy\", x = c(\"1 lazy\", \"1\", \"1 LAZY\"), max = 2, value = TRUE)\nagrep(\"laysy\", c(\"1 lazy\", \"1\", \"1 LAZY\"), max = 3, value = TRUE)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#16\nlibrary(stringr)\n\n#Generate data\nstrings <- c(\" 219 733 8965\", \"329-293-8753 \", \"banana\", \"595 794 7569\",\n             \"387 287 6718\", \"apple\", \"233.398.9187 \", \"482 952 3315\", \"239 923 8115\",\n             \"842 566 4692\", \"Work: 579-499-7527\", \"$1000\", \"Home: 543.355.3679\")\nphone <- \"([2-9][0-9]{2})[- .]([0-9]{3})[- .]([0-9]{4})\"\n\n# Which strings contain phone numbers?\nstr_detect(strings, phone)\nstrings[str_detect(strings, phone)]\n\nstr_\n# Where in the string is the phone number located?\nloc <- str_locate(strings, phone)\nloc\n\n# Extract just the phone numbers\nstr_sub(strings, loc[, \"start\"], loc[, \"end\"])\n\n# Or more conveniently\nstr_extract(strings, phone)\n\n# Pull out the three components of the match\nstr_match(strings, phone)\n\n# Anonymise the data\nstr_replace(strings, phone, \"XXX-XXX-XXXX\")\n\n\n\n\n#17\nlibrary(stringr)\n\ncol2hex <- function(col) {\n    rgb <- col2rgb(col)\n    rgb(rgb[\"red\", ], rgb[\"green\", ], rgb[\"blue\", ], max = 255)\n}\n\n# try â˜º\ncol2rgb(\"peachpuff\")\n\n# Goal replace colour names in a string with their hex equivalent\nstrings <- c(\"Roses are red, violets are blue\", \"My favourite colour is green\")\ncolours <- str_c(\"\\\\b\", colors(), \"\\\\b\", collapse=\"|\")\n\n# This gets us the colours, but we have no way of replacing them\nstr_extract_all(strings, colours)\n\n# Instead, let's work with locations\nlocs <- str_locate_all(strings, colours)\nsapply(seq_along(strings), function(i) {\n    string <- strings[i]\n    loc <- locs[[i]]\n    # Convert colours to hex and replace\n    hex <- col2hex(str_sub(string, loc[, \"start\"], loc[, \"end\"]))\n    str_sub(string, loc[, \"start\"], loc[, \"end\"]) <- hex\n    string\n}\n)\n\n\n\n\n\n",
    "created" : 1396926401446.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3531490438",
    "id" : "69F5C6D5",
    "lastKnownWriteTime" : 1396908018,
    "path" : "~/Google Drive/Schoolwork/2014Spring/W4249/HW4/hw4example.R",
    "project_path" : "hw4example.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}